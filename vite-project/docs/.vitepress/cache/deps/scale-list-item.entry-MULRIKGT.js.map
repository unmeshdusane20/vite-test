{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-list-item.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { c as classnames } from './index-713f92a5.js';\n\nconst listItemCss = \":host(scale-list-item){--display:block;--font-size:var(--telekom-typography-font-size-body);--line-height:var(--telekom-typography-line-spacing-standard);--spacing-left:calc(0.5ch + var(--telekom-spacing-composition-space-07));--spacing-left-nested:calc(\\n    0.5ch + var(--telekom-spacing-composition-space-06)\\n  );--font-marker-ordered:var(--telekom-text-style-body);--font-marker-ordered-nested:var(--telekom-text-style-small-bold);--line-height-marker-ordered-nested:var(\\n    --telekom-typography-line-spacing-standard\\n  );--spacing-top-marker-ordered-nested:calc(\\n    var(--telekom-spacing-composition-space-06) -\\n      var(--telekom-spacing-composition-space-05)\\n  );--spacing-right-no-marker:var(--telekom-spacing-composition-space-04);display:var(--display)}.list-item{position:relative;font-size:var(--font-size);line-height:var(--line-height);padding-left:var(--spacing-left);margin-top:var(--telekom-spacing-composition-space-03)}.list-item--nested{padding-left:var(--spacing-left-nested)}.list-item:before{content:'';top:0;left:0;position:absolute}.list-item--unordered:before{top:0.5em;border:var(--telekom-spacing-composition-space-01) solid currentColor;display:block;transform:scale(0.66);background:currentColor;box-sizing:border-box;border-radius:50%;width:var(--telekom-spacing-composition-space-04);height:var(--telekom-spacing-composition-space-04)}.list-item--nested.list-item--unordered:before{border:var(--telekom-spacing-composition-space-01) solid currentColor;background:transparent}.list-item--ordered:before{content:attr(data-index) '.';font:var(--font-marker-ordered);font-variant-numeric:tabular-nums}.list-item--nested.list-item--ordered:before{font:var(--telekom-text-style-small-bold);font-variant-numeric:tabular-nums;line-height:var(--line-height-marker-ordered-nested);padding-top:var(--spacing-top-marker-ordered-nested)}.list-item--no-marker{display:inline-flex;align-items:center;padding-left:0}.list-item--no-marker:before{display:none}.list-item--no-marker>::slotted(*){margin-right:var(--spacing-right-no-marker)}\";\n\nconst ListItem = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** Whether this is a child of an ordered scale-list, gets set automatically by its parent */\n    this.ordered = false;\n    /** If `false`, no marker or left padding will be visible */\n    this.marker = true;\n    this.hasNestedChild = false;\n    this.isNested = false;\n    this.handleSlotChange = ({ target }) => {\n      this.hasNestedChild =\n        target.assignedNodes().length > 0;\n      this.isNested = this.isNestedCheck();\n    };\n    this.isNestedCheck = () => {\n      return this.el.closest('scale-list[slot=\"nested\"]') != null;\n    };\n  }\n  componentWillLoad() {\n    this.isNested = this.isNestedCheck();\n  }\n  connectedCallback() {\n    if (!this.el.hasAttribute('role')) {\n      this.el.setAttribute('role', 'listitem');\n    }\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", { class: this.getCssClassMap(), \"data-index\": this.index, part: classnames('base', this.ordered ? 'ordered' : 'unordered', this.isNested && 'nested', !this.marker && 'no-marker') }, h(\"slot\", null), h(\"div\", { class: \"list-item__nested-list\", part: \"nested-list\", hidden: !this.hasNestedChild }, h(\"slot\", { name: \"nested\", onSlotchange: this.handleSlotChange })))));\n  }\n  getCssClassMap() {\n    const orderType = this.ordered ? 'ordered' : 'unordered';\n    return classnames('list-item', this.isNested && 'list-item--nested', `list-item--${orderType}`, !this.marker && 'list-item--no-marker');\n  }\n  get el() { return getElement(this); }\n};\nListItem.style = listItemCss;\n\nexport { ListItem as scale_list_item };\n"],
  "mappings": ";;;;;;;;;;;AAGA,IAAM,cAAc;AAEpB,IAAM,WAAW,MAAM;AAAA,EACrB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,UAAU;AAEf,SAAK,SAAS;AACd,SAAK,iBAAiB;AACtB,SAAK,WAAW;AAChB,SAAK,mBAAmB,CAAC,EAAE,OAAO,MAAM;AACtC,WAAK,iBACH,OAAO,cAAc,EAAE,SAAS;AAClC,WAAK,WAAW,KAAK,cAAc;AAAA,IACrC;AACA,SAAK,gBAAgB,MAAM;AACzB,aAAO,KAAK,GAAG,QAAQ,2BAA2B,KAAK;AAAA,IACzD;AAAA,EACF;AAAA,EACA,oBAAoB;AAClB,SAAK,WAAW,KAAK,cAAc;AAAA,EACrC;AAAA,EACA,oBAAoB;AAClB,QAAI,CAAC,KAAK,GAAG,aAAa,MAAM,GAAG;AACjC,WAAK,GAAG,aAAa,QAAQ,UAAU;AAAA,IACzC;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAQ,EAAE,MAAM,MAAM,KAAK,UAAU,EAAE,SAAS,MAAM,KAAK,MAAM,GAAG,EAAE,OAAO,EAAE,OAAO,KAAK,eAAe,GAAG,cAAc,KAAK,OAAO,MAAM,WAAW,QAAQ,KAAK,UAAU,YAAY,aAAa,KAAK,YAAY,UAAU,CAAC,KAAK,UAAU,WAAW,EAAE,GAAG,EAAE,QAAQ,IAAI,GAAG,EAAE,OAAO,EAAE,OAAO,0BAA0B,MAAM,eAAe,QAAQ,CAAC,KAAK,eAAe,GAAG,EAAE,QAAQ,EAAE,MAAM,UAAU,cAAc,KAAK,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAAA,EAC3b;AAAA,EACA,iBAAiB;AACf,UAAM,YAAY,KAAK,UAAU,YAAY;AAC7C,WAAO,WAAW,aAAa,KAAK,YAAY,qBAAqB,cAAc,SAAS,IAAI,CAAC,KAAK,UAAU,sBAAsB;AAAA,EACxI;AAAA,EACA,IAAI,KAAK;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AACtC;AACA,SAAS,QAAQ;",
  "names": []
}
