{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-icon-communication-message-outgoing.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\n\nconst iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nconst CommunicationMessageOutgoing = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n    this.decorative = false;\n    /** (optional) If `true` the icon can receive focus */\n    this.focusable = false;\n  }\n  connectedCallback() {\n    if (!this.hostElement.hasAttribute('styles')) {\n      this.hostElement.style.display = 'inline-flex';\n    }\n  }\n  render() {\n    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};\n    const focusable = this.focusable ? { tabindex: 0 } : {};\n    return (h(Host, null, h(\"svg\", Object.assign({ class: \"scale-icon\", xmlns: \"http://www.w3.org/2000/svg\", width: this.size, height: this.size, viewBox: \"0 0 24 24\" }, ariaHidden, focusable), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", { fill: ((this.fill === 'currentColor') ? this.color : this.fill) }, this.selected ? (h(\"g\", null, h(\"path\", { d: \"M19.506 3v6.697l-.841-.551a1.195 1.195 0 00-1.227-.052 1.2 1.2 0 00-.623.925l-.007.131v1.65h-2.55c-1.075 0-1.95.875-1.95 1.95 0 1.026.797 1.87 1.805 1.945l.145.005h2.55v1.65l.008.076.012.074h-6.203l-3.274 3.274a1.63 1.63 0 01-1.167.491c-.81 0-1.591-.597-1.671-1.514l-.007-.155V17.5H3.363a2.857 2.857 0 01-2.852-2.69l-.005-.167V3h19zm-1.498 7.15l5.5 3.6-5.5 3.6V14.5h-3.75a.75.75 0 01-.102-1.493l.102-.007h3.75v-2.85z\", \"fill-rule\": \"evenodd\" }))) : (h(\"g\", null, h(\"path\", { d: \"M19.5 3v6.339L18 8.357V4.5H2v10.143c0 .704.54 1.285 1.227 1.35l.13.007H6v3.596c0 .134.165.237.285.117L9.998 16H16.5v1.5h-5.881l-3.274 3.274a1.63 1.63 0 01-1.167.491c-.81 0-1.591-.597-1.671-1.514l-.007-.155V17.5H3.357a2.857 2.857 0 01-2.852-2.69L.5 14.644V3h19zM18 10.15l5.5 3.6-5.5 3.6V14.5h-3.75a.75.75 0 01-.102-1.493L14.25 13H18v-2.85z\", \"fill-rule\": \"evenodd\" })))))));\n  }\n  get hostElement() { return getElement(this); }\n};\nCommunicationMessageOutgoing.style = iconCss;\n\nexport { CommunicationMessageOutgoing as scale_icon_communication_message_outgoing };\n"],
  "mappings": ";;;;;;;;AAEA,IAAM,UAAU;AAEhB,IAAM,+BAA+B,MAAM;AAAA,EACzC,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,QAAQ;AAEb,SAAK,WAAW;AAEhB,SAAK,aAAa;AAElB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,oBAAoB;AAClB,QAAI,CAAC,KAAK,YAAY,aAAa,QAAQ,GAAG;AAC5C,WAAK,YAAY,MAAM,UAAU;AAAA,IACnC;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,aAAa,KAAK,aAAa,EAAE,eAAe,OAAO,IAAI,CAAC;AAClE,UAAM,YAAY,KAAK,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC;AACtD,WAAQ,EAAE,MAAM,MAAM,EAAE,OAAO,OAAO,OAAO,EAAE,OAAO,cAAc,OAAO,8BAA8B,OAAO,KAAK,MAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,GAAG,YAAY,SAAS,GAAG,KAAK,sBAAsB,EAAE,SAAS,MAAM,KAAK,kBAAkB,GAAG,EAAE,KAAK,EAAE,MAAQ,KAAK,SAAS,iBAAkB,KAAK,QAAQ,KAAK,KAAM,GAAG,KAAK,WAAY,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,oaAAoa,aAAa,UAAU,CAAC,CAAC,IAAM,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,sVAAsV,aAAa,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;AAAA,EACjtC;AAAA,EACA,IAAI,cAAc;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAC/C;AACA,6BAA6B,QAAQ;",
  "names": []
}
