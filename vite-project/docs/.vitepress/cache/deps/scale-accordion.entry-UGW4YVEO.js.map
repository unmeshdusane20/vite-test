{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-accordion.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { c as classnames } from './index-713f92a5.js';\n\nconst Accordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** If `true`, only one scale-collapsible within the accordion can be open at a time */\n    this.dependent = false;\n    /** If `true`, scale-collapsibles within the accordion will all be open initially, unless this is dependant */\n    this.expanded = false;\n    /** Heading level for scale-collapsible descendants */\n    this.headingLevel = null;\n    this.iconLocation = 'left';\n  }\n  /**\n   * Handle `dependent`\n   */\n  collapsibleHandler(event) {\n    event.stopPropagation();\n    const { expanded } = event.detail;\n    if (!this.dependent || expanded === false) {\n      return;\n    }\n    this.getCollapsibleChildren().forEach((child) => {\n      if (child !== event.target && child.hasAttribute('expanded')) {\n        child.expanded = false;\n      }\n    });\n  }\n  headingLevelChanged(newValue) {\n    this.propagatePropsToChildren(newValue, this.iconLocation);\n  }\n  iconLocationChanged(newValue) {\n    this.propagatePropsToChildren(this.headingLevel, newValue);\n  }\n  connectedCallback() {\n    /**\n     * Handle `expanded`\n     */\n    if (!this.dependent) {\n      this.getCollapsibleChildren().forEach((child) => {\n        child.expanded = this.expanded;\n      });\n    }\n  }\n  componentDidLoad() {\n    if (this.headingLevel !== null || this.iconLocation !== 'left') {\n      this.propagatePropsToChildren(this.headingLevel, this.iconLocation);\n    }\n  }\n  getCollapsibleChildren() {\n    return Array.from(this.el.children).filter((el) => el.tagName === 'SCALE-COLLAPSIBLE');\n  }\n  propagatePropsToChildren(headingLevel, iconLocation) {\n    this.getCollapsibleChildren().forEach((item) => {\n      item.headingLevel = headingLevel;\n      item.iconLocation = iconLocation;\n    });\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", { class: this.getCssClassMap(), part: \"base\" }, h(\"slot\", null))));\n  }\n  getCssClassMap() {\n    return classnames('accordion');\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"headingLevel\": [\"headingLevelChanged\"],\n    \"iconLocation\": [\"iconLocationChanged\"]\n  }; }\n};\n\nexport { Accordion as scale_accordion };\n"],
  "mappings": ";;;;;;;;;;;AAGA,IAAM,YAAY,MAAM;AAAA,EACtB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,YAAY;AAEjB,SAAK,WAAW;AAEhB,SAAK,eAAe;AACpB,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,OAAO;AACxB,UAAM,gBAAgB;AACtB,UAAM,EAAE,SAAS,IAAI,MAAM;AAC3B,QAAI,CAAC,KAAK,aAAa,aAAa,OAAO;AACzC;AAAA,IACF;AACA,SAAK,uBAAuB,EAAE,QAAQ,CAAC,UAAU;AAC/C,UAAI,UAAU,MAAM,UAAU,MAAM,aAAa,UAAU,GAAG;AAC5D,cAAM,WAAW;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB,UAAU;AAC5B,SAAK,yBAAyB,UAAU,KAAK,YAAY;AAAA,EAC3D;AAAA,EACA,oBAAoB,UAAU;AAC5B,SAAK,yBAAyB,KAAK,cAAc,QAAQ;AAAA,EAC3D;AAAA,EACA,oBAAoB;AAIlB,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,uBAAuB,EAAE,QAAQ,CAAC,UAAU;AAC/C,cAAM,WAAW,KAAK;AAAA,MACxB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,QAAI,KAAK,iBAAiB,QAAQ,KAAK,iBAAiB,QAAQ;AAC9D,WAAK,yBAAyB,KAAK,cAAc,KAAK,YAAY;AAAA,IACpE;AAAA,EACF;AAAA,EACA,yBAAyB;AACvB,WAAO,MAAM,KAAK,KAAK,GAAG,QAAQ,EAAE,OAAO,CAAC,OAAO,GAAG,YAAY,mBAAmB;AAAA,EACvF;AAAA,EACA,yBAAyB,cAAc,cAAc;AACnD,SAAK,uBAAuB,EAAE,QAAQ,CAAC,SAAS;AAC9C,WAAK,eAAe;AACpB,WAAK,eAAe;AAAA,IACtB,CAAC;AAAA,EACH;AAAA,EACA,SAAS;AACP,WAAQ,EAAE,MAAM,MAAM,KAAK,UAAU,EAAE,SAAS,MAAM,KAAK,MAAM,GAAG,EAAE,OAAO,EAAE,OAAO,KAAK,eAAe,GAAG,MAAM,OAAO,GAAG,EAAE,QAAQ,IAAI,CAAC,CAAC;AAAA,EAC/I;AAAA,EACA,iBAAiB;AACf,WAAO,WAAW,WAAW;AAAA,EAC/B;AAAA,EACA,IAAI,KAAK;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAAA,EACpC,WAAW,WAAW;AAAE,WAAO;AAAA,MAC7B,gBAAgB,CAAC,qBAAqB;AAAA,MACtC,gBAAgB,CAAC,qBAAqB;AAAA,IACxC;AAAA,EAAG;AACL;",
  "names": []
}
