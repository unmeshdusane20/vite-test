{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-icon-action-backspace.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\n\nconst iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nconst ActionBackspace = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n    this.decorative = false;\n    /** (optional) If `true` the icon can receive focus */\n    this.focusable = false;\n  }\n  connectedCallback() {\n    if (!this.hostElement.hasAttribute('styles')) {\n      this.hostElement.style.display = 'inline-flex';\n    }\n  }\n  render() {\n    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};\n    const focusable = this.focusable ? { tabindex: 0 } : {};\n    return (h(Host, null, h(\"svg\", Object.assign({ class: \"scale-icon\", xmlns: \"http://www.w3.org/2000/svg\", width: this.size, height: this.size, viewBox: \"0 0 24 24\" }, ariaHidden, focusable), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", { fill: ((this.fill === 'currentColor') ? this.color : this.fill) }, this.selected ? (h(\"g\", null, h(\"path\", { d: \"M20 3.5H8L.5 12 8 20.5h12a3 3 0 003-3v-11a3 3 0 00-3-3zm-2 10.925a.745.745 0 010 1.075.75.75 0 01-1.06 0l-2.44-2.44-2.425 2.44a.75.75 0 01-1.075 0 .745.745 0 010-1.06L13.44 12 11 9.575A.76.76 0 0112.075 8.5l2.425 2.44 2.425-2.44A.76.76 0 0118 9.575L15.56 12 18 14.425z\", \"fill-rule\": \"evenodd\" }))) : (h(\"g\", null, h(\"path\", { d: \"M20 3.5a3.01 3.01 0 012.995 2.824L23 6.5v11a3.01 3.01 0 01-2.824 2.995L20 20.5H8L.5 12 8 3.5h12zM20 5H8.7l-6.2 7 6.2 7H20c.8 0 1.423-.576 1.493-1.352l.007-.148v-11c0-.8-.576-1.423-1.352-1.493L20 5zm-8.95 3.5a.722.722 0 01.965-.074l.085.074 2.4 2.45 2.45-2.45c.3-.3.75-.3 1.05 0a.742.742 0 01.03 1.021L15.55 12l2.35 2.4c.3.3.3.75 0 1.05a.722.722 0 01-.965.074l-.085-.074-2.4-2.4-2.4 2.4c-.3.3-.75.3-1.05 0a.722.722 0 01-.074-.965L11 14.4l2.45-2.45-2.4-2.4c-.3-.3-.3-.75 0-1.05z\", \"fill-rule\": \"evenodd\" })))))));\n  }\n  get hostElement() { return getElement(this); }\n};\nActionBackspace.style = iconCss;\n\nexport { ActionBackspace as scale_icon_action_backspace };\n"],
  "mappings": ";;;;;;;;AAEA,IAAM,UAAU;AAEhB,IAAM,kBAAkB,MAAM;AAAA,EAC5B,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,QAAQ;AAEb,SAAK,WAAW;AAEhB,SAAK,aAAa;AAElB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,oBAAoB;AAClB,QAAI,CAAC,KAAK,YAAY,aAAa,QAAQ,GAAG;AAC5C,WAAK,YAAY,MAAM,UAAU;AAAA,IACnC;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,aAAa,KAAK,aAAa,EAAE,eAAe,OAAO,IAAI,CAAC;AAClE,UAAM,YAAY,KAAK,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC;AACtD,WAAQ,EAAE,MAAM,MAAM,EAAE,OAAO,OAAO,OAAO,EAAE,OAAO,cAAc,OAAO,8BAA8B,OAAO,KAAK,MAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,GAAG,YAAY,SAAS,GAAG,KAAK,sBAAsB,EAAE,SAAS,MAAM,KAAK,kBAAkB,GAAG,EAAE,KAAK,EAAE,MAAQ,KAAK,SAAS,iBAAkB,KAAK,QAAQ,KAAK,KAAM,GAAG,KAAK,WAAY,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,gRAAgR,aAAa,UAAU,CAAC,CAAC,IAAM,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,geAAge,aAAa,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;AAAA,EACvsC;AAAA,EACA,IAAI,cAAc;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAC/C;AACA,gBAAgB,QAAQ;",
  "names": []
}
