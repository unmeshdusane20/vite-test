{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-icon-device-device-watch.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\n\nconst iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nconst DeviceDeviceWatch = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n    this.decorative = false;\n    /** (optional) If `true` the icon can receive focus */\n    this.focusable = false;\n  }\n  connectedCallback() {\n    if (!this.hostElement.hasAttribute('styles')) {\n      this.hostElement.style.display = 'inline-flex';\n    }\n  }\n  render() {\n    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};\n    const focusable = this.focusable ? { tabindex: 0 } : {};\n    return (h(Host, null, h(\"svg\", Object.assign({ class: \"scale-icon\", xmlns: \"http://www.w3.org/2000/svg\", width: this.size, height: this.size, viewBox: \"0 0 24 24\" }, ariaHidden, focusable), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", { fill: ((this.fill === 'currentColor') ? this.color : this.fill) }, this.selected ? (h(\"g\", null, h(\"path\", { d: \"M17.19 20.875l-.08.3a2.5 2.5 0 01-2.234 1.82L14.7 23H9.3a2.5 2.5 0 01-2.357-1.657l-.053-.168-.08-.3h10.38zM15.97 3.5a4 4 0 013.995 3.8l.005.2v9a4 4 0 01-3.8 3.995l-.2.005H8.03a4 4 0 01-3.995-3.8l-.005-.2v-9a4 4 0 013.8-3.995l.2-.005h7.94zm5.53 7v3h-1.05v-3h1.05zM14.7.955a2.5 2.5 0 012.357 1.657l.053.168.08.3H6.81l.08-.3A2.5 2.5 0 019.124.96L9.3.956h5.4z\", \"fill-rule\": \"evenodd\" }))) : (h(\"g\", null, h(\"path\", { d: \"M21.5 10.5H20v-3c0-1.75-1.1-3.2-2.65-3.75l-.25-.9C16.8 1.75 15.8 1 14.7 1H9.3c-1.1 0-2.1.75-2.4 1.8l-.25.9C5.1 4.3 4 5.75 4 7.5v9c0 1.75 1.1 3.2 2.65 3.75l.25.9c.3 1.1 1.3 1.8 2.4 1.8h5.4c1.1 0 2.1-.75 2.4-1.8l.25-.9A4.004 4.004 0 0020 16.5v-3h1.5v-3zm-3 6c0 1.4-1.1 2.5-2.5 2.5H8c-1.4 0-2.5-1.1-2.5-2.5v-9C5.5 6.1 6.6 5 8 5h8c1.4 0 2.5 1.1 2.5 2.5v9z\", \"fill-rule\": \"evenodd\" })))))));\n  }\n  get hostElement() { return getElement(this); }\n};\nDeviceDeviceWatch.style = iconCss;\n\nexport { DeviceDeviceWatch as scale_icon_device_device_watch };\n"],
  "mappings": ";;;;;;;;AAEA,IAAM,UAAU;AAEhB,IAAM,oBAAoB,MAAM;AAAA,EAC9B,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,QAAQ;AAEb,SAAK,WAAW;AAEhB,SAAK,aAAa;AAElB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,oBAAoB;AAClB,QAAI,CAAC,KAAK,YAAY,aAAa,QAAQ,GAAG;AAC5C,WAAK,YAAY,MAAM,UAAU;AAAA,IACnC;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,aAAa,KAAK,aAAa,EAAE,eAAe,OAAO,IAAI,CAAC;AAClE,UAAM,YAAY,KAAK,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC;AACtD,WAAQ,EAAE,MAAM,MAAM,EAAE,OAAO,OAAO,OAAO,EAAE,OAAO,cAAc,OAAO,8BAA8B,OAAO,KAAK,MAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,GAAG,YAAY,SAAS,GAAG,KAAK,sBAAsB,EAAE,SAAS,MAAM,KAAK,kBAAkB,GAAG,EAAE,KAAK,EAAE,MAAQ,KAAK,SAAS,iBAAkB,KAAK,QAAQ,KAAK,KAAM,GAAG,KAAK,WAAY,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,uWAAuW,aAAa,UAAU,CAAC,CAAC,IAAM,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,mWAAmW,aAAa,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;AAAA,EACjqC;AAAA,EACA,IAAI,cAAc;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAC/C;AACA,kBAAkB,QAAQ;",
  "names": []
}
