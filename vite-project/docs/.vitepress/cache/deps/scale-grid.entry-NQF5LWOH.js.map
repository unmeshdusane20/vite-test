{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-grid.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { c as createBreakpointValuedProp, a as createCssString } from './valuesTransformation-ce891c3a.js';\n\nconst Grid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    const sizedProps = [\n      createBreakpointValuedProp('columns', this.columns),\n      createBreakpointValuedProp('gutter-y', this.gutterY),\n      createBreakpointValuedProp('gutter-x', this.gutterX),\n      createBreakpointValuedProp('spacing', this.spacing),\n    ].filter((sizeProp) => sizeProp);\n    const sizableCssStrings = sizedProps.map((sizedProp) => createCssString(sizedProp));\n    const maxWidthCssStirng = this.maxWidth\n      ? `--max-width:${this.maxWidth};`\n      : '';\n    const styleString = sizableCssStrings.join('') + maxWidthCssStirng;\n    this.hostElement.setAttribute('style', styleString);\n  }\n  render() {\n    return (h(Host, null, h(\"slot\", null)));\n  }\n  get hostElement() { return getElement(this); }\n};\n\nexport { Grid as scale_grid };\n"],
  "mappings": ";;;;;;;;;;;;AAGA,IAAM,OAAO,MAAM;AAAA,EACjB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAAA,EAChC;AAAA,EACA,oBAAoB;AAClB,UAAM,aAAa;AAAA,MACjB,2BAA2B,WAAW,KAAK,OAAO;AAAA,MAClD,2BAA2B,YAAY,KAAK,OAAO;AAAA,MACnD,2BAA2B,YAAY,KAAK,OAAO;AAAA,MACnD,2BAA2B,WAAW,KAAK,OAAO;AAAA,IACpD,EAAE,OAAO,CAAC,aAAa,QAAQ;AAC/B,UAAM,oBAAoB,WAAW,IAAI,CAAC,cAAc,gBAAgB,SAAS,CAAC;AAClF,UAAM,oBAAoB,KAAK,WAC3B,eAAe,KAAK,QAAQ,MAC5B;AACJ,UAAM,cAAc,kBAAkB,KAAK,EAAE,IAAI;AACjD,SAAK,YAAY,aAAa,SAAS,WAAW;AAAA,EACpD;AAAA,EACA,SAAS;AACP,WAAQ,EAAE,MAAM,MAAM,EAAE,QAAQ,IAAI,CAAC;AAAA,EACvC;AAAA,EACA,IAAI,cAAc;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAC/C;",
  "names": []
}
