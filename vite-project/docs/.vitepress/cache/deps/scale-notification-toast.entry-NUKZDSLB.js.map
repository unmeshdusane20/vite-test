{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-notification-toast.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\nimport { e as emitEvent } from './utils-c4af5b47.js';\n\nconst notificationToastCss = \":host{--width:366px;--width-icon-container:48px;--radius:var(--telekom-radius-standard);--background:var(--telekom-color-background-surface);--z-index:100;--box-shadow:var(--telekom-shadow-raised-standard);--background-success-icon-container:var(\\n    --telekom-color-functional-success-standard\\n  );--background-warning-icon-container:var(\\n    --telekom-color-functional-warning-standard\\n  );--background-error-icon-container:var(\\n    --telekom-color-functional-danger-standard\\n  );--background-informational-icon-container:var(\\n    --telekom-color-functional-informational-standard\\n  );--background-success-text-container:var(\\n    --telekom-color-functional-success-subtle\\n  );--background-warning-text-container:var(\\n    --telekom-color-functional-warning-subtle\\n  );--background-error-text-container:var(\\n    --telekom-color-functional-danger-subtle\\n  );--background-informational-text-container:var(\\n    --telekom-color-functional-informational-subtle\\n  )}.notification-toast{width:calc(var(--width) - var(--width-icon-container));opacity:1;z-index:var(--z-index);position:fixed;background:var(--background);box-shadow:var(--box-shadow);box-sizing:border-box;border-radius:0 var(--radius) var(--radius) 0;flex-direction:column;justify-content:space-between}.notification-toast.notification-toast--story{position:absolute}.notification-toast.notification-toast--story.notification-toast--hide{opacity:0}.notification-toast.notification-toast--story.notification-toast--opened{opacity:1}.notification-toast.notification-toast--variant-success{background:var(--background-success-text-container)}.notification-toast.notification-toast--variant-warning{background:var(--background-warning-text-container)}.notification-toast.notification-toast--variant-error{background:var(--background-error-text-container)}.notification-toast.notification-toast--variant-informational{background:var(--background-informational-text-container)}.notification-toast__icon{position:absolute;top:50%;left:50%;margin:-10px 0 0 -10px}.notification-toast__icon-container{height:100%;width:var(--width-icon-container);position:absolute;left:calc(var(--width-icon-container) * -1 + 1px);top:0;float:left;border-radius:var(--radius) 0 0 var(--radius)}.notification-toast.notification-toast--variant-success .notification-toast__icon-container{background:var(--background-success-icon-container)}.notification-toast.notification-toast--variant-warning .notification-toast__icon-container{background:var(--background-warning-icon-container)}.notification-toast.notification-toast--variant-error .notification-toast__icon-container{background:var(--background-error-icon-container)}.notification-toast.notification-toast--variant-informational .notification-toast__icon-container{background:var(--background-informational-icon-container)}::slotted([slot='header']){margin:0;padding:3px var(--width-icon-container) 0 10px;font-weight:bold;font-size:16px}::slotted([slot='body']){padding:3px 0 0 10px;margin:0}::slotted([slot='link']){padding:10px 0 15px 10px;margin:0}.notification-toast__text-container{width:calc(var(--width) - calc(var(--width-icon-container) * 1));min-height:33px;float:left;position:relative;margin:0 0 0 1px;padding:15px 0 0 0}.notification-toast__button-close{position:absolute;top:10px;right:7.5px;color:#191919;border:none;cursor:pointer;margin:0;padding:0;background:transparent}.notification-toast__button-close svg{height:19px;width:19px;padding:7.5px 6.5px 6.5px 6.5px;border-radius:20%;color:var(--telekom-color-text-and-icon-standard)}.notification-toast__button-close:hover svg{background-color:white;color:var(--telekom-color-text-and-icon-primary-hovered)}@media screen and (forced-colors: active), (-ms-high-contrast: active){.notification-toast__button-close svg{color:hsl(0, 0%, 100%)}.notification-toast{border:1px solid hsl(0, 0%, 100%)}.notification-toast__icon-container{border:1px solid hsl(0, 0%, 100%);margin-top:-1px}}\";\n\nconst NotificationToast = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleClosing = createEvent(this, \"scale-closing\", 7);\n    this.scaleClose = createEvent(this, \"scale-close\", 7);\n    /** (optional) Toast variant */\n    this.variant = 'informational';\n    /** (optional) Animated toast */\n    this.animated = true;\n    /** (optional) Alignment choose for top and bottom */\n    this.alignment = 'top-right';\n    /** (optional) Toast position at the top */\n    this.positionVertical = 12;\n    /** (optional) Toast position right */\n    this.positionHorizontal = 12;\n    /** (optional) Toast auto hide */\n    this.autoHide = false;\n    /** (optional) Toast auto hide duration */\n    this.autoHideDuration = 3000;\n    /** (optional) Toast fade duration */\n    this.fadeDuration = 500;\n    /** (optional) Label for close button */\n    this.closeButtonLabel = 'close';\n    /** (optional) Title for close button */\n    this.closeButtonTitle = 'close';\n    /** (optional) Toast state height with offset */\n    this.toastHeightWithOffset = 0;\n    this.hideToast = false;\n    this.close = () => {\n      emitEvent(this, 'scaleClosing');\n      this.hideToast = true;\n      setTimeout(() => {\n        this.opened = false;\n        emitEvent(this, 'scaleClose');\n      }, this.fadeDuration);\n    };\n    this.transitions = (offset) => `\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n          ${this.alignmentVertical}: -${offset}px;\n        }\n        to {\n          opacity: 1;\n          ${this.alignmentVertical}: ${this.positionVertical}px;\n        }\n      }\n  \n      @keyframes fadeOut {\n        from {\n          opacity: 1;\n          ${this.alignmentVertical}: ${this.positionVertical}px;\n        }\n        to {\n          opacity: 0;\n          ${this.alignmentVertical}: -${offset}px;\n        }\n      }\n    `;\n    this.animationStyle = (offset) => {\n      if (this.animated) {\n        return `\n        .notification-toast--show {\n          ${this.alignmentHorizontal}: ${this.positionHorizontal}px;\n          animation: fadeIn ${this.fadeDuration / 1000}s ease-in-out;\n          ${this.alignmentVertical}: ${this.positionVertical}px;\n          opacity: 1;\n        },\n        .notification-toast--show {\n          ${this.alignmentHorizontal}: ${this.positionHorizontal}px;\n          animation: fadeOut ${this.fadeDuration / 1000}s ease-in-out;\n          ${this.alignmentVertical}: -${offset}px;\n          opacity: 0;\n        }\n      `;\n      }\n      return `\n    .notification-toast--show {\n      ${this.alignmentHorizontal}: ${this.positionHorizontal}px;\n      ${this.alignmentVertical}: ${this.positionVertical}px;\n      opacity: 1;\n    },\n    .notification-toast--show {\n      ${this.alignmentHorizontal}: ${this.positionHorizontal}px;\n      ${this.alignmentVertical}: -${offset}px;\n      opacity: 0;\n    }\n  `;\n    };\n  }\n  connectedCallback() {\n    statusNote({ source: this.element, type: 'warn' });\n  }\n  componentWillLoad() {\n    const alignmentParts = this.alignment.split('-');\n    this.alignmentVertical = alignmentParts[0];\n    this.alignmentHorizontal = alignmentParts[1];\n  }\n  componentDidRender() {\n    if (this.autoHide === true) {\n      setTimeout(this.close, this.autoHideDuration);\n    }\n  }\n  handleIcons() {\n    if (this.variant) {\n      switch (this.variant) {\n        case 'success':\n          return (h(\"scale-icon-action-success\", { class: \"notification-toast__icon\", size: 20, color: \"#ffffff\", selected: true, \"aria-hidden\": \"true\" }));\n        case 'informational':\n          return (h(\"scale-icon-alert-information\", { class: \"notification-toast__icon\", size: 20, selected: true, color: \"#ffffff\", \"aria-hidden\": \"true\" }));\n        case 'error':\n          return (h(\"scale-icon-alert-error\", { class: \"notification-toast__icon\", size: 20, selected: true, color: \"#ffffff\", \"aria-hidden\": \"true\" }));\n        case 'warning':\n          return (h(\"scale-icon-alert-warning\", { class: \"notification-toast__icon\", color: \"#ffff\", size: 20, selected: true, \"aria-hidden\": \"true\" }));\n      }\n    }\n    return;\n  }\n  /** Toast method: open() */\n  async open() {\n    this.opened = true;\n    this.hideToast = false;\n  }\n  render() {\n    if (this.opened) {\n      return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"style\", null, this.transitions(this.toastHeightWithOffset)), h(\"style\", null, this.animationStyle(this.toastHeightWithOffset)), h(\"div\", { role: \"alert\", style: { display: `${this.opened ? '' : 'none'}` }, class: this.getCssClassMap(), part: this.getBasePartMap(), tabindex: \"0\" }, h(\"div\", { class: \"notification-toast__icon-container\" }, this.handleIcons()), h(\"div\", { class: \"notification-toast__text-container\" }, h(\"slot\", { name: \"header\" }), h(\"slot\", { name: \"body\" }), h(\"scale-link\", { href: this.href, class: \"notification-toast__link\", role: \"link\" }, h(\"slot\", { name: \"link\" }))), h(\"button\", { part: \"button-dismissable\", type: \"button\", class: \"notification-toast__button-close\", onClick: () => this.close(), tabindex: 0, \"aria-label\": this.closeButtonLabel, title: this.closeButtonTitle, onKeyDown: (e) => {\n          if (e.key === 'Enter') {\n            this.close();\n          }\n        } }, h(\"scale-icon-action-circle-close\", null)))));\n    }\n  }\n  getToastHeightWithOffset() {\n    const toastHeight = this.element.shadowRoot.querySelector('.toast').scrollHeight;\n    this.toastHeightWithOffset = toastHeight + this.positionVertical;\n  }\n  getBasePartMap() {\n    return this.getCssOrBasePartMap('basePart');\n  }\n  getCssClassMap() {\n    return this.getCssOrBasePartMap('css');\n  }\n  getCssOrBasePartMap(mode) {\n    const component = 'notification-toast';\n    const prefix = mode === 'basePart' ? '' : `${component}`;\n    return classnames(mode === 'basePart' ? 'base' : component, this.variant && `${prefix}--variant-${this.variant}`, !!this.opened && `${prefix}--opened`, !!!this.hideToast && `${prefix}--show`, !!this.hideToast && `${prefix}--hide`, this.story && `${prefix}--story`);\n  }\n  get element() { return getElement(this); }\n};\nNotificationToast.style = notificationToastCss;\n\nexport { NotificationToast as scale_notification_toast };\n"],
  "mappings": "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",
  "names": []
}
