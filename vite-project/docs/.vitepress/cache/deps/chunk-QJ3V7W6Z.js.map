{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/utils-c4af5b47.js"],
  "sourcesContent": ["/**\n * @license\n * Scale https://github.com/telekom/scale\n *\n * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\n// eg isPseudoClassSupported(':focus-visible') // true for chrome, false for safari\nconst isPseudoClassSupported = (pseudoClass) => {\n  // Get the document stylesheet1\n  let ss = document.styleSheets[0];\n  // Create a stylesheet if one doesn't exist\n  if (!ss) {\n    const el = document.createElement('style');\n    document.head.appendChild(el);\n    ss = document.styleSheets[0];\n    document.head.removeChild(el);\n  }\n  // Test the pseudo-class by trying to style with it\n  function testPseudo() {\n    try {\n      if (!/^:/.test(pseudoClass)) {\n        pseudoClass = ':' + pseudoClass;\n      }\n      ss.insertRule('html' + pseudoClass + '{}', 0);\n      ss.deleteRule(0);\n      return true;\n    }\n    catch (e) {\n      return false;\n    }\n  }\n  // Run the test\n  return testPseudo();\n};\n/**\n * Call `emit` on component events twice.\n * One for the legacy camel-cased event, one for the new kebab-cased.\n * e.g. for the event `scaleChange` it will do `instance.scaleChange.emit()` and `instance.scaleChangeLegacy.emit()`.\n * It expects both `scaleChange` and `scaleChangeLegacy` event-decorated properties to exist on the component.\n *\n * @param instance {ComponentInterface} - The component instance, aka `this`\n * @param eventKey {string} - The event property, e.g. `scaleChange`\n * @param detail {any} - The custom event `detail`\n * @returns {CustomEvent[]} - The events emitted\n */\nfunction emitEvent(instance, eventKey, detail) {\n  const legacyKey = eventKey + 'Legacy';\n  const emitted = [];\n  if (typeof instance[legacyKey] !== 'undefined') {\n    // Emit legacy camel case event, e.g. `scaleClose`\n    emitted.push(instance[legacyKey].emit(detail));\n  }\n  // Emit now-standard kebab-case event, e.g. `scale-close`\n  emitted.push(instance[eventKey].emit(detail));\n  // Return both\n  return emitted;\n}\nfunction isClickOutside(event, host) {\n  let target = event.target;\n  const hasShadow = target.shadowRoot != null;\n  const composedPath = hasShadow ? event.composedPath() : [];\n  do {\n    if (target === host) {\n      return false;\n    }\n    if (hasShadow) {\n      // @ts-ignore\n      target = composedPath.shift();\n    }\n    else {\n      target = target.parentNode;\n    }\n  } while (target);\n  return true;\n}\nconst isScaleIcon = (el) => {\n  if (el == null || el.nodeType !== 1) {\n    return false;\n  }\n  return el.nodeName.toUpperCase().substring(0, 10) === 'SCALE-ICON';\n};\n/** Creating global ids for different component helper-texts */\nlet id = 0;\nfunction generateUniqueId() {\n  return id++;\n}\n/**\n * Useful for waiting for animations to finish before doing something.\n *\n * @param el {HTMLElement | ShadowRoot} - The element to call `getAnimations` on\n * @returns {Promise} - Resolves when all animations are finished\n */\nconst animationsFinished = (el) => {\n  return Promise.all(el.getAnimations({ subtree: true }).map((x) => x.finished));\n};\n\nexport { animationsFinished as a, isClickOutside as b, isPseudoClassSupported as c, emitEvent as e, generateUniqueId as g, hasShadowDom as h, isScaleIcon as i };\n"],
  "mappings": ";AAUA,IAAM,eAAe,CAAC,OAAO;AAC3B,SAAO,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,GAAG;AACjC;AAEA,IAAM,yBAAyB,CAAC,gBAAgB;AAE9C,MAAI,KAAK,SAAS,YAAY,CAAC;AAE/B,MAAI,CAAC,IAAI;AACP,UAAM,KAAK,SAAS,cAAc,OAAO;AACzC,aAAS,KAAK,YAAY,EAAE;AAC5B,SAAK,SAAS,YAAY,CAAC;AAC3B,aAAS,KAAK,YAAY,EAAE;AAAA,EAC9B;AAEA,WAAS,aAAa;AACpB,QAAI;AACF,UAAI,CAAC,KAAK,KAAK,WAAW,GAAG;AAC3B,sBAAc,MAAM;AAAA,MACtB;AACA,SAAG,WAAW,SAAS,cAAc,MAAM,CAAC;AAC5C,SAAG,WAAW,CAAC;AACf,aAAO;AAAA,IACT,SACO,GAAG;AACR,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO,WAAW;AACpB;AAYA,SAAS,UAAU,UAAU,UAAU,QAAQ;AAC7C,QAAM,YAAY,WAAW;AAC7B,QAAM,UAAU,CAAC;AACjB,MAAI,OAAO,SAAS,SAAS,MAAM,aAAa;AAE9C,YAAQ,KAAK,SAAS,SAAS,EAAE,KAAK,MAAM,CAAC;AAAA,EAC/C;AAEA,UAAQ,KAAK,SAAS,QAAQ,EAAE,KAAK,MAAM,CAAC;AAE5C,SAAO;AACT;AACA,SAAS,eAAe,OAAO,MAAM;AACnC,MAAI,SAAS,MAAM;AACnB,QAAM,YAAY,OAAO,cAAc;AACvC,QAAM,eAAe,YAAY,MAAM,aAAa,IAAI,CAAC;AACzD,KAAG;AACD,QAAI,WAAW,MAAM;AACnB,aAAO;AAAA,IACT;AACA,QAAI,WAAW;AAEb,eAAS,aAAa,MAAM;AAAA,IAC9B,OACK;AACH,eAAS,OAAO;AAAA,IAClB;AAAA,EACF,SAAS;AACT,SAAO;AACT;AACA,IAAM,cAAc,CAAC,OAAO;AAC1B,MAAI,MAAM,QAAQ,GAAG,aAAa,GAAG;AACnC,WAAO;AAAA,EACT;AACA,SAAO,GAAG,SAAS,YAAY,EAAE,UAAU,GAAG,EAAE,MAAM;AACxD;AAEA,IAAI,KAAK;AACT,SAAS,mBAAmB;AAC1B,SAAO;AACT;AAOA,IAAM,qBAAqB,CAAC,OAAO;AACjC,SAAO,QAAQ,IAAI,GAAG,cAAc,EAAE,SAAS,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC/E;",
  "names": []
}
