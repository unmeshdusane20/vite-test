{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-checkbox-group.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst checkboxGroupCss = \":host,.checkbox-group{--spacing-left-container:var(--telekom-spacing-composition-space-10);--spacing-left-checkbox:var(--telekom-spacing-composition-space-04);--spacing-top-slotted-item:var(--telekom-spacing-composition-space-05)}.checkbox-group{display:inline-flex;flex-direction:column;position:relative}.checkbox-group [part='fieldset']{display:flex;flex-direction:column;border:0;padding:0;margin:0;margin-left:var(--spacing-left-container)}.checkbox-group [part='parent-checkbox']{line-height:var(--telekom-typography-line-spacing-standard);--font-weight-label:var(--telekom-typography-font-weight-bold)}.checkbox-group legend{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.checkbox-group scale-checkbox{margin-top:var(--spacing-top-slotted-item)}\";\n\nconst CheckboxGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) Input label */\n    this.label = '';\n    /** @deprecated - invalid should replace status */\n    this.status = '';\n    /** (optional) Input status */\n    this.invalid = false;\n    /** (optional) Input value */\n    this.value = '';\n    this.selectText = 'Select all';\n    this.unselectText = 'Unselect all';\n  }\n  handleCheckboxChange(ev) {\n    const el = ev.composedPath()[0];\n    const { tagName, checked } = el;\n    // make sure the event belongs to a scale checkbox\n    if (tagName.toLowerCase() === 'scale-checkbox') {\n      if (el !== this.groupNode) {\n        this.updateParentCheckboxState();\n      }\n      else {\n        this.updateChildrenCheckboxStates(checked);\n        this.updateParentCheckboxState();\n      }\n    }\n  }\n  componentDidRender() {\n    if (this.status !== '') {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"status\" is deprecated. Please use the \"invalid\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.host.hasAttribute('aria-label')) {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"ariaLabel\" is deprecated. Please use the \"ariaLabelCheckboxGroup\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n  }\n  getChildNodes() {\n    return Array.from(this.host.querySelector('fieldset').querySelectorAll('scale-checkbox'));\n  }\n  updateChildrenCheckboxStates(checked) {\n    const childNodes = this.getChildNodes().filter((node) => !node.disabled);\n    childNodes.forEach((node) => {\n      if (checked !== undefined) {\n        node.checked = checked;\n        node.indeterminate = false;\n      }\n    });\n  }\n  updateParentCheckboxState() {\n    const childNodes = this.getChildNodes();\n    const checked = childNodes === null || childNodes === void 0 ? void 0 : childNodes.map((childNode) => childNode.checked);\n    const indeterminate = childNodes === null || childNodes === void 0 ? void 0 : childNodes.map((childNode) => childNode.indeterminate);\n    const disabled = childNodes === null || childNodes === void 0 ? void 0 : childNodes.map((childNode) => childNode.disabled);\n    const allChecked = checked.every(Boolean);\n    const someChecked = checked.some(Boolean);\n    const someIndeterminate = indeterminate.some(Boolean);\n    const allDisabled = disabled.every(Boolean);\n    this.checked = allChecked || someChecked;\n    this.indeterminate = someIndeterminate || (someChecked && !allChecked);\n    this.disabled = allDisabled;\n    this.actionText = allChecked ? this.unselectText : this.selectText;\n  }\n  render() {\n    return (h(Host, { class: \"checkbox-group\" }, h(\"scale-checkbox\", { ref: (el) => (this.groupNode = el), name: this.name, label: this.label, ariaLabelCheckbox: `${this.ariaLabelCheckboxGroup || this.label} - ${this.actionText}`, helperText: this.helperText, status: this.status, invalid: this.invalid, value: this.value, inputId: this.inputId, checked: this.checked, indeterminate: this.indeterminate, disabled: this.disabled, part: \"parent-checkbox\" }), h(\"fieldset\", { part: \"fieldset\" }, h(\"legend\", null, this.ariaLabelCheckboxGroup || this.label), h(\"slot\", null))));\n  }\n  componentDidLoad() {\n    this.updateParentCheckboxState();\n  }\n  get host() { return getElement(this); }\n};\nCheckboxGroup.style = checkboxGroupCss;\n\nexport { CheckboxGroup as scale_checkbox_group };\n"],
  "mappings": "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",
  "names": []
}
