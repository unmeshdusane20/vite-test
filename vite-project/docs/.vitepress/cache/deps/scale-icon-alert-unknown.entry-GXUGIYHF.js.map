{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-icon-alert-unknown.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, a as Host, g as getElement } from './index-6d95a4bc.js';\n\nconst iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nconst AlertUnknown = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n    this.decorative = false;\n    /** (optional) If `true` the icon can receive focus */\n    this.focusable = false;\n  }\n  connectedCallback() {\n    if (!this.hostElement.hasAttribute('styles')) {\n      this.hostElement.style.display = 'inline-flex';\n    }\n  }\n  render() {\n    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};\n    const focusable = this.focusable ? { tabindex: 0 } : {};\n    return (h(Host, null, h(\"svg\", Object.assign({ class: \"scale-icon\", xmlns: \"http://www.w3.org/2000/svg\", width: this.size, height: this.size, viewBox: \"0 0 24 24\" }, ariaHidden, focusable), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", { fill: ((this.fill === 'currentColor') ? this.color : this.fill) }, this.selected ? (h(\"g\", null, h(\"path\", { d: \"M2 2v17a3 3 0 003 3h14a3 3 0 003-3V2H2zm10 15.5a1.25 1.25 0 110-2.5 1.25 1.25 0 010 2.5zm1.75-5.5c-.5.43-.935.835-.935 1.46v.33H11.07v-.6c0-1.03.61-1.525 1.205-2 .5-.395.945-.77.945-1.395A1.045 1.045 0 0012.1 8.66a1.145 1.145 0 00-1.165 1.16H9.12a2.84 2.84 0 013-2.8c1.695 0 2.925 1.125 2.925 2.67-.02 1.17-.695 1.775-1.295 2.31z\", \"fill-rule\": \"evenodd\" }))) : (h(\"g\", null, h(\"path\", { d: \"M22 2v17a3 3 0 01-2.824 2.995L19 22H5a3 3 0 01-2.995-2.824L2 19V2h20zm-1.5 1.5h-17V19c0 .778.596 1.42 1.356 1.493L5 20.5h14c.778 0 1.42-.596 1.493-1.356L20.5 19V3.5zM12 15a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zm.1-7.98c1.696 0 2.927 1.123 2.927 2.67 0 1.023-.519 1.616-1.049 2.108l-.462.42c-.346.323-.636.654-.69 1.095l-.01.151v.332H11.07v-.602c0-.823.392-1.305.852-1.711l.234-.198.357-.294c.388-.33.707-.675.707-1.196 0-.699-.428-1.134-1.118-1.134-.612 0-1.02.367-1.146 1.015l-.023.143H9.12c.084-1.412 1.026-2.799 2.98-2.799z\", \"fill-rule\": \"evenodd\" })))))));\n  }\n  get hostElement() { return getElement(this); }\n};\nAlertUnknown.style = iconCss;\n\nexport { AlertUnknown as scale_icon_alert_unknown };\n"],
  "mappings": ";;;;;;;;AAEA,IAAM,UAAU;AAEhB,IAAM,eAAe,MAAM;AAAA,EACzB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,OAAO;AAEZ,SAAK,OAAO;AAEZ,SAAK,QAAQ;AAEb,SAAK,WAAW;AAEhB,SAAK,aAAa;AAElB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,oBAAoB;AAClB,QAAI,CAAC,KAAK,YAAY,aAAa,QAAQ,GAAG;AAC5C,WAAK,YAAY,MAAM,UAAU;AAAA,IACnC;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,aAAa,KAAK,aAAa,EAAE,eAAe,OAAO,IAAI,CAAC;AAClE,UAAM,YAAY,KAAK,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC;AACtD,WAAQ,EAAE,MAAM,MAAM,EAAE,OAAO,OAAO,OAAO,EAAE,OAAO,cAAc,OAAO,8BAA8B,OAAO,KAAK,MAAM,QAAQ,KAAK,MAAM,SAAS,YAAY,GAAG,YAAY,SAAS,GAAG,KAAK,sBAAsB,EAAE,SAAS,MAAM,KAAK,kBAAkB,GAAG,EAAE,KAAK,EAAE,MAAQ,KAAK,SAAS,iBAAkB,KAAK,QAAQ,KAAK,KAAM,GAAG,KAAK,WAAY,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,6UAA6U,aAAa,UAAU,CAAC,CAAC,IAAM,EAAE,KAAK,MAAM,EAAE,QAAQ,EAAE,GAAG,ohBAAohB,aAAa,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;AAAA,EACxzC;AAAA,EACA,IAAI,cAAc;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAC/C;AACA,aAAa,QAAQ;",
  "names": []
}
