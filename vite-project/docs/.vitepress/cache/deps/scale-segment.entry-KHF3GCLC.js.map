{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-segment.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent } from './utils-c4af5b47.js';\n\nconst segmentCss = \":host{--background-color-selected:var(--telekom-color-ui-base);--button-radius:6px;--padding-top-bottom:var(--telekom-spacing-composition-space-03);--height:28px;--font:var(--telekom-text-style-caption-bold);--label-disabled:var(--telekom-color-text-and-icon-disabled);--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);--color:var(--telekom-color-text-and-icon-standard);--color-selected:var(--telekom-color-text-and-icon-primary-standard);--font-medium:var(--telekom-text-style-ui-bold);--height-medium:36px;--font-large:var(--telekom-text-style-ui-bold);--height-large:40px;--background-color-hover:var(--telekom-color-ui-state-fill-hovered);--background-color-active:var(--telekom-color-ui-state-fill-pressed);display:flex;align-items:center;justify-content:center;flex:1}.segment{box-sizing:border-box;position:relative;border:0;height:100%;width:100%;border-radius:var(--button-radius);padding-top:var(--padding-top-bottom);padding-bottom:var(--padding-top-bottom);transition:var(--transition);background-color:transparent;padding:0}.segment--mask{box-sizing:border-box;display:flex;align-items:center;justify-content:center;position:relative;height:100%;width:100%;border-radius:var(--button-radius);background-color:transparent;font:var(--font);transition:var(--transition);white-space:nowrap;color:var(--color);line-height:1}button.segment--small.segment--selected .segment--mask{padding-left:var(--telekom-spacing-composition-space-04);padding-right:var(--telekom-spacing-composition-space-05)}button.segment--icon-only.segment--small .segment--mask{padding-left:var(--telekom-spacing-composition-space-06);padding-right:var(--telekom-spacing-composition-space-06)}button.segment--small .segment--mask{padding-left:0.625rem;padding-right:0.625rem}.segment--small{height:var(--height)}.segment--medium{height:var(--height-medium)}button.segment--medium.segment--selected .segment--mask{padding-left:var(--telekom-spacing-composition-space-05);padding-right:var(--telekom-spacing-composition-space-06)}button.segment--medium .segment--mask{font:var(--font-medium);padding-left:0.875rem;padding-right:0.875rem}.segment--large{height:var(--height-large)}button.segment--large.segment--selected .segment--mask{padding-left:var(--telekom-spacing-composition-space-06);padding-right:var(--telekom-spacing-composition-space-07)}button.segment--large .segment--mask{font:var(--font-large);padding-left:var(--telekom-spacing-composition-space-06);padding-right:var(--telekom-spacing-composition-space-07)}.segment--selected{background-color:var(--background-color-selected);box-shadow:var(--telekom-shadow-raised-standard)}.segment--selected .segment--mask{color:var(--color-selected)}.segment--disabled.segment--selected .segment--mask{color:var(--label-disabled)}.segment--disabled:not(.segment--selected) .segment--mask{color:var(--label-disabled);background-color:transparent}.segment--left-sibling-selected{border-radius:0 var(--button-radius) var(--button-radius) 0;margin-left:0;clip-path:inset(-2.75rem -2.75rem -2.75rem 0);backface-visibility:hidden;overflow:hidden}.segment--right-sibling-selected{border-radius:var(--button-radius) 0 0 var(--button-radius);clip-path:inset(-2.75rem 0 -2.75rem -2.75rem);margin-right:0;backface-visibility:hidden;overflow:hidden;position:relative}.segment--left-right-sibling-selected{clip-path:inset(-2.75rem 0 -2.75rem 0);border-radius:0;margin-left:0;margin-right:0;backface-visibility:hidden}.segment:not(.segment--disabled):hover .segment--mask{background-color:var(--background-color-hover)}.segment:not(.segment--disabled):active .segment--mask{background-color:var(--background-color-active)}.segment:focus{box-shadow:var(--telekom-shadow-raised-standard);outline:var(--telekom-spacing-composition-space-02) solid\\n    var(--telekom-color-functional-focus-standard);outline-offset:var(--telekom-spacing-composition-space-01);z-index:40;position:relative}.segment:not(.segment--selected):focus{outline-offset:0}.segment--left-right-sibling-selected:focus,.segment--right-sibling-selected:focus,.segment--left-sibling-selected:focus{clip-path:none}.segment:not(.segment--icon-only) scale-icon-action-checkmark,.segment scale-icon-action-close{margin-right:var(--telekom-spacing-composition-space-03)}.segment:not(.segment--selected) scale-icon-action-checkmark{visibility:hidden !important}.segment scale-icon-action-checkmark{vertical-align:middle}.segment--selected:not(.segment--icon-only) .icon-container{display:none !important}.segment .success-icon-container{display:none}.segment--selected .success-icon-container{display:flex;justify-content:center;align-items:center}.icon-container{height:100%;display:flex;justify-content:center;align-items:center}.segment--selected .icon-container{color:var(--color-selected)}\";\n\nlet i = 0;\nconst Segment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleClick = createEvent(this, \"scale-click\", 7);\n    this.scaleClickLegacy = createEvent(this, \"scaleClick\", 7);\n    /** (optional) The size of the segment */\n    this.size = 'small';\n    /** (optional) If `true`, the segment is selected */\n    this.selected = false;\n    /** (optional) If `true`, the segment is disabled */\n    this.disabled = false;\n    /** (optional) translation of 'selected */\n    this.ariaLangSelected = 'selected';\n    /** (optional) translation of 'deselected */\n    this.ariaLangDeselected = 'deselected';\n    /** a11y text for getting meaningful value. `$buttonNumber` and `$selected` are template variables and will be replaces by their corresponding properties.  */\n    this.ariaDescriptionTranslation = '$selected';\n    this.handleClick = (event) => {\n      if (parseInt(this.selectedIndex, 10) + 1 === this.position) {\n        return;\n      }\n      event.preventDefault();\n      this.selected = !this.selected;\n      emitEvent(this, 'scaleClick', {\n        id: this.segmentId,\n        selected: this.selected,\n      });\n    };\n  }\n  async setFocus() {\n    this.focusableElement.focus();\n  }\n  componentWillLoad() {\n    if (this.segmentId == null) {\n      this.segmentId = 'segment-' + i++;\n    }\n  }\n  componentDidUpdate() {\n    this.handleIcon();\n  }\n  getAriaDescriptionTranslation() {\n    const replaceSelected = this.selected\n      ? this.ariaLangSelected\n      : this.ariaLangDeselected;\n    const filledText = this.ariaDescriptionTranslation\n      .replace(/\\$position/g, `${this.position}`)\n      .replace(/\\$selected/g, `${replaceSelected}`);\n    return filledText;\n  }\n  handleIcon() {\n    Array.from(this.hostElement.childNodes).forEach((child) => {\n      if (child.nodeType === 1 &&\n        child.nodeName.substr(0, 10) === 'SCALE-ICON') {\n        const icon = this.hostElement.querySelector(child.nodeName);\n        switch (this.size) {\n          case 'small':\n            icon.setAttribute('size', '14');\n            break;\n          case 'medium':\n            icon.setAttribute('size', '16');\n            break;\n          case 'large':\n            icon.setAttribute('size', '20');\n            break;\n        }\n        icon.style.display = 'inline-flex';\n        icon.style.marginRight = '4px';\n        this.hasIcon = true;\n      }\n      if (child.nodeType === 3 && this.hostElement.childNodes.length === 1) {\n        this.textOnly = true;\n        const span = document.createElement('span');\n        child.parentNode.insertBefore(span, child);\n        span.appendChild(child);\n      }\n      if (child.nodeType === 1 &&\n        child.nodeName.substr(0, 10) === 'SCALE-ICON' &&\n        this.hostElement.childNodes.length === 1) {\n        this.iconOnly = true;\n        this.hostElement.setAttribute('icon-only', 'true');\n        const icon = this.hostElement.querySelector(child.nodeName);\n        icon.style.marginRight = '0px';\n        this.selected\n          ? icon.setAttribute('selected', '')\n          : icon.removeAttribute('selected');\n      }\n    });\n  }\n  render() {\n    return (h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"button\", { ref: (el) => (this.focusableElement = el), class: this.getCssClassMap(), id: this.segmentId, onClick: this.handleClick, disabled: this.disabled, type: \"button\", style: { width: this.width }, \"aria-label\": this.ariaLabelSegment, \"aria-pressed\": this.selected, part: this.getBasePartMap(), \"aria-description\": this.getAriaDescriptionTranslation() }, h(\"div\", { class: \"segment--mask\" }, !this.iconOnly && (h(\"div\", { class: \"success-icon-container\" }, h(\"scale-icon-action-checkmark\", { size: this.size === 'small'\n        ? 14\n        : this.size === 'medium'\n          ? 16\n          : 20, class: \"scale-icon-action-checkmark\", \"aria-hidden\": \"true\", selected: true }))), h(\"div\", { class: \"icon-container\" }, h(\"slot\", { name: \"segment-icon\" })), h(\"slot\", null)))));\n  }\n  getBasePartMap() {\n    return this.getCssOrBasePartMap('basePart');\n  }\n  getCssClassMap() {\n    return this.getCssOrBasePartMap('css');\n  }\n  getCssOrBasePartMap(mode) {\n    const prefix = mode === 'basePart' ? '' : 'segment--';\n    return classnames('segment', this.size && `${prefix}${this.size}`, this.selected && `${prefix}selected`, this.disabled && `${prefix}disabled`, this.adjacentSiblings &&\n      `${prefix}${this.adjacentSiblings.replace(/ /g, '-')}-sibling-selected`, this.hasIcon && `${prefix}has-icon`, this.iconOnly && `${prefix}icon-only`);\n  }\n  get hostElement() { return getElement(this); }\n};\nSegment.style = segmentCss;\n\nexport { Segment as scale_segment };\n"],
  "mappings": "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",
  "names": []
}
