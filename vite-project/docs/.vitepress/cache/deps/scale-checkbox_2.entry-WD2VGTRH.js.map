{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-checkbox_2.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { g as generateUniqueId, e as emitEvent } from './utils-c4af5b47.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst checkboxCss = \":host,scale-checkbox{--spacing-x:var(--telekom-spacing-composition-space-04);--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);--color-text:var(--telekom-color-text-and-icon-standard);--color-error:var(--telekom-color-functional-danger-standard);--color-disabled:var(--telekom-color-text-and-icon-disabled);--color-standard:var(--telekom-color-background-surface);--background-disabled:none;--color-primary:var(--telekom-color-primary-standard);--color-focus:var(--telekom-color-functional-focus-standard);--color-primary-hover:var(--telekom-color-text-and-icon-standard);--color-primary-active:var(--telekom-color-text-and-icon-standard);--width-control:var(--telekom-spacing-composition-space-07);--height-control:var(--telekom-spacing-composition-space-07);--transition-control:var(--transition);--spacing-control:var(--telekom-spacing-composition-space-02);--spacing-left-control:var(--telekom-spacing-composition-space-03);--radius-control:var(--telekom-radius-small);--border-width-control:var(--telekom-line-weight-standard);--transition-helper-text:var(--transition);--spacing-left-helper-text:calc(var(--width-control) + var(--spacing-x));--font-size-helper-text:var(--telekom-typography-font-size-small);--font-weight-helper-text:var(--telekom-typography-font-weight-bold);--line-height-helper-text:var(--telekom-typography-line-spacing-standard);--color-helper-text:var(\\n    --telekom-color-text-and-icon-functional-informational\\n  );--font-weight-label:var(--telekom-typography-font-weight-medium);--transition-label:var(--transition);--color-icon-checked-disabled:var(--telekom-color-text-and-icon-disabled);--color-icon-checked-active:var(\\n    --telekom-color-text-and-icon-white-standard\\n  );--width-icon:var(--telekom-spacing-composition-space-06);--height-icon:var(--telekom-spacing-composition-space-06);--stroke-width:var(--stroke-width-checkbox, 0.5px)}scale-checkbox{position:relative;display:flex;width:fit-content;flex-direction:column;color:var(--color-text)}scale-checkbox [part='icon'],scale-checkbox [part='checkbox'],scale-checkbox [part='label'],scale-checkbox [part='helper-text']{transition:var(--transition)}scale-checkbox [part='input'],scale-checkbox.hideLabel [part='label']{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}scale-checkbox [part='checkbox']{box-sizing:border-box;display:flex;flex:0 0 auto;justify-content:center;align-items:center;width:var(--width-control);height:var(--height-control);border-radius:var(--radius-control);border:var(--border-width-control) solid\\n    var(--telekom-color-ui-border-standard)}scale-checkbox [part='label']{font-weight:var(--font-weight-label);margin-left:var(--spacing-x)}scale-checkbox [part='icon']{width:var(--width-icon);height:var(--height-icon);color:var(--color-icon-checked-active)}scale-checkbox [part='icon'] svg{width:100%;height:100%}scale-checkbox [part='icon'] svg rect,scale-checkbox [part='icon'] svg path{stroke:currentColor;stroke-width:var(--stroke-width)}scale-checkbox [part='container']{align-items:center;display:flex;line-height:var(--telekom-typography-line-spacing-standard)}scale-checkbox [part='helper-text']{font-size:var(--font-size-helper-text);font-weight:var(--font-weight-helper-text);line-height:var(--line-height-helper-text);color:var(--color-helper-text);padding-left:calc(\\n    var(--width-control) + var(--spacing-control) + var(--spacing-x) +\\n      calc(var(--border-width-control) * 2)\\n  );display:flex;align-items:center}scale-checkbox.indeterminate [part='checkbox']{background:var(--telekom-color-primary-standard);border:none;color:var(--color-icon-checked-active)}scale-checkbox.indeterminate [part='icon']{color:var(--color-icon-checked-active)}scale-checkbox.checked [part='checkbox']{background:var(--telekom-color-primary-standard);border-color:var(--telekom-color-primary-standard);color:var(--color-icon-checked-active)}scale-checkbox [part='container']:hover [part='checkbox']{background:var(--telekom-color-ui-state-fill-hovered);border-color:var(--telekom-color-ui-border-hovered);color:var(--color-icon-checked-active)}scale-checkbox.checked [part='container']:hover [part='checkbox']{background:var(--telekom-color-primary-hovered);border-color:var(--telekom-color-ui-border-hovered);color:var(--color-icon-checked-active)}scale-checkbox [part='container']:active [part='checkbox']{background:var(--telekom-color-ui-state-fill-pressed);border-color:var(--telekom-color-ui-border-pressed);color:var(--color-icon-checked-active)}scale-checkbox [part='input']:focus~[part='container'] [part='checkbox']{outline:var(--telekom-spacing-composition-space-02) solid var(--color-focus);outline-offset:var(--telekom-spacing-composition-space-01)}scale-checkbox [part='container']:hover{color:var(--color-primary-hover);cursor:pointer}scale-checkbox.checked [part='container']:hover [part='checkbox'],scale-checkbox.indeterminate [part='container']:hover [part='checkbox']{background:var(--telekom-color-primary-hovered);border-color:var(--telekom-color-primary-hovered)}scale-checkbox.checked [part='input']:active~[part='container'],scale-checkbox.checked [part='container']:active{color:var(--color-primary-active)}scale-checkbox [part='input']:active~[part='container'] [part='checkbox'],scale-checkbox.checked [part='container']:active [part='checkbox'],scale-checkbox.indeterminate [part='container']:active [part='checkbox']{background:var(--telekom-color-primary-pressed);border-color:var(--telekom-color-primary-pressed)}scale-checkbox:not(.checked) [part='container']:active [part='checkbox']{background:var(--telekom-color-ui-state-fill-pressed);border-color:var(--telekom-color-ui-border-pressed)}scale-icon-alert-information,scale-icon-alert-error{color:var(--color-helper-text);display:flex;justify-content:center;align-items:center;margin-right:var(--telekom-spacing-composition-space-03)}scale-checkbox.error [part='helper-text']{color:var(--telekom-color-text-and-icon-functional-danger)}scale-checkbox.error [part='helper-text'] scale-icon-alert-error{color:var(--telekom-color-text-and-icon-functional-danger)}scale-checkbox.error [part='checkbox']{box-shadow:inset 0 0 0 var(--telekom-spacing-composition-space-02)\\n    var(--color-error);border:none}scale-checkbox.error [part='input']:focus~[part='container'] [part='checkbox']{box-shadow:inset 0 0 0 var(--telekom-spacing-composition-space-02)\\n    var(--color-error)}scale-checkbox.error [part='checkbox']:hover{background-color:var(--telekom-color-ui-state-fill-hovered);box-shadow:inset 0 0 0 var(--telekom-spacing-composition-space-02)\\n    var(--telekom-color-functional-danger-hovered)}scale-checkbox.error [part='checkbox']:active{background-color:var(--telekom-color-ui-state-fill-pressed);box-shadow:inset 0 0 0 var(--telekom-spacing-composition-space-02)\\n    var(--telekom-color-functional-danger-pressed)}scale-checkbox.error:not(.checked) [part='container']:active [part='checkbox']{background:var(--telekom-color-ui-state-fill-pressed);box-shadow:inset 0 0 0 var(--telekom-spacing-composition-space-02)\\n    var(--telekom-color-functional-danger-pressed)}scale-checkbox.checked.error [part='container']:hover [part='checkbox']{background-color:var(--telekom-color-primary-hovered);box-shadow:inset 0 0 0 var(--telekom-spacing-composition-space-02)\\n    var(--telekom-color-functional-danger-hovered)}scale-checkbox.error [part='helper-text']{padding-left:calc(\\n    var(--width-control) + var(--spacing-control) + var(--spacing-x)\\n  )}scale-checkbox.disabled{cursor:not-allowed}scale-checkbox.disabled [part='container'],scale-checkbox.disabled [part='helper-text']{color:var(--color-disabled);pointer-events:none}scale-checkbox.disabled [part='checkbox']{background:var(--telekom-color-ui-solid-fill-disabled);border-color:var(--telekom-color-ui-border-disabled)}scale-checkbox.checked.disabled [part='checkbox']{background-color:var(--telekom-color-ui-disabled);border-color:transparent}scale-checkbox.checked.disabled [part='icon']{color:var(--color-icon-checked-disabled);background-color:var(--telekom-color-ui-disabled)}scale-checkbox.disabled [part='helper-text'] scale-icon-alert-information,scale-checkbox.disabled.error [part='helper-text'] scale-icon-alert-error{color:var(--color-disabled)}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    /** (optional) Input label */\n    this.label = '';\n    /** (optional) Hides the specified label visually */\n    this.hideLabel = false;\n    /** @deprecated - invalid should replace status */\n    this.status = '';\n    /** (optional) Input status */\n    this.invalid = false;\n    /** (optional) Input disabled */\n    this.disabled = false;\n    /** (optional) Active switch */\n    this.checked = false;\n    /** (optional) indeterminate */\n    this.indeterminate = false;\n    /** (optional) Input value */\n    this.value = '';\n    this.internalId = generateUniqueId();\n    this.handleChange = (ev) => {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n        ev.target.checked = true;\n      }\n      else {\n        this.checked = ev.target.checked;\n      }\n      const { checked, indeterminate, value, disabled } = this;\n      emitEvent(this, 'scaleChange', { checked, indeterminate, value, disabled });\n    };\n  }\n  componentDidRender() {\n    if (this.status !== '') {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"status\" is deprecated. Please use the \"invalid\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.host.hasAttribute('aria-label')) {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"ariaLabel\" is deprecated. Please use the \"ariaLabelCheckbox\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n  }\n  connectedCallback() {\n    if (!this.inputId) {\n      this.inputId = 'input-checkbox-' + this.internalId;\n    }\n  }\n  /* Accessibility: rendering the icon *only* when checked, otherwise is always visible in HCM */\n  renderIcon() {\n    if (this.indeterminate) {\n      return (h(\"scale-icon-action-minus\", { part: \"icon\", decorative: true }));\n    }\n    if (this.checked) {\n      return (h(\"scale-icon-action-checkmark\", { part: \"icon\", decorative: true }));\n    }\n  }\n  renderHelperIcon() {\n    if (this.helperText && !this.invalid) {\n      return (h(\"scale-icon-alert-information\", { size: 11 }));\n    }\n    if (this.invalid) {\n      return h(\"scale-icon-alert-error\", { size: 11 });\n    }\n  }\n  renderHelperText(text) {\n    if (this.helperText && this.helperText !== '') {\n      return (h(\"div\", { part: \"helper-text\", id: text.id, \"aria-live\": \"polite\", \"aria-relevant\": \"additions removals\" }, this.renderHelperIcon(), text.content));\n    }\n  }\n  render() {\n    const helperText = {\n      id: this.helperText ? `helper-message-${this.internalId}` : null,\n      content: this.helperText,\n    };\n    return (h(Host, { class: {\n        checked: this.checked,\n        indeterminate: this.indeterminate,\n        disabled: this.disabled,\n        error: this.status === 'error' || this.invalid,\n        hideLabel: this.hideLabel,\n      } }, h(\"input\", { type: \"checkbox\", part: \"input\", name: this.name || null, id: this.inputId, value: this.value, checked: this.checked, indeterminate: this.indeterminate, \"aria-label\": this.ariaLabelCheckbox, \"aria-checked\": this.indeterminate ? 'mixed' : false, \"aria-invalid\": this.status === 'error' || this.invalid, \"aria-describedBy\": helperText.id, disabled: this.disabled, required: this.required, onChange: this.handleChange }), h(\"label\", { part: \"container\", htmlFor: this.inputId }, h(\"div\", { part: \"checkbox\" }, this.renderIcon()), h(\"div\", { part: \"label\" }, this.label || h(\"slot\", null))), this.renderHelperText(helperText)));\n  }\n  get host() { return getElement(this); }\n};\nCheckbox.style = checkboxCss;\n\nconst iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--telekom-motion-duration-transition)\\n    var(--telekom-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nconst ActionMinus = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n    this.decorative = false;\n    /** (optional) If `true` the icon can receive focus */\n    this.focusable = false;\n  }\n  connectedCallback() {\n    if (!this.hostElement.hasAttribute('styles')) {\n      this.hostElement.style.display = 'inline-flex';\n    }\n  }\n  render() {\n    const ariaHidden = this.decorative ? { 'aria-hidden': 'true' } : {};\n    const focusable = this.focusable ? { tabindex: 0 } : {};\n    return (h(Host, null, h(\"svg\", Object.assign({ class: \"scale-icon\", xmlns: \"http://www.w3.org/2000/svg\", width: this.size, height: this.size, viewBox: \"0 0 24 24\" }, ariaHidden, focusable), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", { fill: ((this.fill === 'currentColor') ? this.color : this.fill) }, this.selected ? (h(\"g\", null, h(\"path\", { d: \"M19.5 10.75h-15a1.25 1.25 0 000 2.5h15a1.25 1.25 0 100-2.5z\", \"fill-rule\": \"evenodd\" }))) : (h(\"g\", null, h(\"path\", { d: \"M19.5 12.75h-15a.75.75 0 110-1.5h15a.75.75 0 110 1.5z\", \"fill-rule\": \"evenodd\" })))))));\n  }\n  get hostElement() { return getElement(this); }\n};\nActionMinus.style = iconCss;\n\nexport { Checkbox as scale_checkbox, ActionMinus as scale_icon_action_minus };\n"],
  "mappings": "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",
  "names": []
}
