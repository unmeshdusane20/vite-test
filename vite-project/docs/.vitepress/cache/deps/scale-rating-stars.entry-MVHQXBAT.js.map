{
  "version": 3,
  "sources": ["../../../../node_modules/@telekom/scale-components/dist/esm/scale-rating-stars.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-6d95a4bc.js';\nimport { e as emitEvent } from './utils-c4af5b47.js';\nimport { s as statusNote } from './status-note-0089e9c9.js';\n\nconst ratingStarsCss = \":host{--stars-color:var(--telekom-color-text-and-icon-primary-standard);--stars-hover-color:var(--telekom-color-text-and-icon-primary-hovered);--stars-active-color:var(--telekom-color-text-and-icon-primary-pressed);--stars-inactive-color:transparent;--stars-placeholder-color:var(--telekom-color-ui-border-standard);--stars-placeholder-hover-color:var(--telekom-color-ui-border-hovered);--stars-disabled-color:var(--telekom-color-text-and-icon-disabled);--stars-spacing:var(--telekom-spacing-composition-space-02);--stars-transition:color var(--telekom-motion-duration-immediate);--stars-size:24px;--label-font:var(--telekom-text-style-ui);--infotext-font:var(--telekom-text-style-body);--infotext-font-small:var(--telekom-text-style-body);--infotext-color:var(--telekom-color-text-and-icon-additional);--focus-outline:var(--telekom-line-weight-highlight) solid\\n    var(--telekom-color-functional-focus-standard)}[star-size='small'],[size='small']{--stars-size:16px}[part='container']{display:inline-flex;flex-direction:column;position:relative}[part='range-slider']{position:absolute;border:0;margin:0;left:calc(-1 * var(--stars-size));bottom:0;z-index:2;width:calc(100% + var(--stars-size) * 2);opacity:0;height:var(--stars-size)}@media (hover: hover){[part='range-slider']{clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;white-space:nowrap;width:1px}}input[type='range']::-webkit-slider-thumb{-webkit-appearance:none;border:0;height:var(--stars-size);width:var(--stars-size);border-radius:50%;background:#ffffff;cursor:pointer;margin-left:0px;margin-top:0}[part='content']{display:flex;align-items:center}[part='wrapper']{display:inline-flex;border-radius:var(--telekom-spacing-composition-space-03);margin-left:calc(-1 * var(--stars-spacing))}[part='wrapper']:hover [part='star'] [part='selected-star']{opacity:1}[part='star']>*{pointer-events:none}[part='label']{font:var(--label-font);margin-bottom:var(--telekom-spacing-composition-space-04);white-space:nowrap}[part='infotext']{margin-left:var(--telekom-spacing-composition-space-04);display:flex;align-items:center;font:var(--infotext-font);color:var(--infotext-color);white-space:nowrap}:host([size='small']) [part='infotext']{font:var(--infotext-font-small)}[part='star']{--decimal-width:100%;display:inline-flex;position:relative;color:var(--stars-color);cursor:pointer;padding:0 var(--stars-spacing)}[part='placeholder-star']{display:inline-flex;color:var(--stars-placeholder-color);transition:var(--stars-transition)}[part='selected-star']{color:var(--stars-inactive-color);margin-left:0px;position:relative;transition:var(--stars-transition)}.icon-clip{overflow:hidden;position:absolute;width:var(--decimal-width);height:100%}[part='star'][data-half]{--decimal-width:calc(50% - var(--stars-spacing))}[part='star'][data-selected]{--stars-placeholder-color:transparent}[part='star'][data-half]{--stars-placeholder-color:currentColor}[part='star'][data-selected] [part='selected-star']{color:var(--stars-color)}@media (hover: hover){[part='wrapper']:hover{--stars-color:var(--stars-hover-color);--stars-placeholder-color:transparent}[part='wrapper']:hover [part='star']{--decimal-width:100%}[part='wrapper']:hover [part='star'][data-half]{--stars-placeholder-color:transparent}[part='wrapper']:hover [part='selected-star']{color:var(--stars-color)}[part='star']:hover~[part='star'] [part='selected-star']{color:var(--stars-inactive-color)}[part='star']:hover~[part='star'] [part='placeholder-star']{color:var(--stars-placeholder-hover-color)}}[part='wrapper']:active{--stars-color:var(--stars-active-color)}:host(:focus-within) [part='wrapper'],[part='wrapper']:focus{outline:var(--focus-outline)}:host(.readonly) [part='wrapper']{--stars-placeholder-color:var(--stars-disabled-color);pointer-events:none}:host(.disabled) [part='label'],:host(.disabled) [part='infotext']{color:var(--stars-disabled-color)}:host(.disabled) [part='wrapper']{--stars-color:var(--stars-disabled-color);--stars-placeholder-color:var(--stars-disabled-color);pointer-events:none}:host(.hideLabel) [part='label']{visibility:hidden;height:0;margin-bottom:0}@media screen and (forced-colors: active), (-ms-high-contrast: active){[part='star'] [part='placeholder-star']{color:var(--telekom-color-text-and-icon-inverted-standard)}[part='star'][data-selected] [part='placeholder-star']{color:var(--stars-inactive-color)}[part='star']:hover~[part='star'] [part='placeholder-star']{color:var(--telekom-color-text-and-icon-inverted-standard)}[part='wrapper']:hover [part='placeholder-star']{color:var(--stars-inactive-color)}}\";\n\nconst sizes = {\n  small: 16,\n  large: 24,\n};\nlet ratingStarCount = 0;\nconst RatingStars = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    this.ratingStarId = `scale-rating-star-${ratingStarCount++}`;\n    /** @deprecated; size should be used instead of starSize */\n    this.starSize = 'large';\n    /** size of the stars  */\n    this.size = 'large';\n    /** @deprecated; The lower limit of the rating */\n    this.minRating = 0;\n    /** @deprecated; max should be used instead of maxRating */\n    this.maxRating = 5;\n    /** The upper limit of the rating */\n    this.max = 5;\n    /** Represents the current value of the rating */\n    this.rating = 0;\n    /** makes the rating non-interactive (but still accessible)  */\n    this.readonly = false;\n    /** disables input  */\n    this.disabled = false;\n    /** a11y text for getting meaningful value. `$rating` and `$max` (deprecated `$maxRating`) are template variables and will be replaces by their corresponding properties.  */\n    this.ariaLabelTranslation = '$rating out of $max stars';\n    /** (optional) rating label */\n    this.label = 'Rating';\n    /** (optional) info text */\n    this.hideLabel = false;\n    this.handleInput = (ev) => {\n      const input = ev.composedPath()[0];\n      const value = Number(input.value);\n      switch (true) {\n        case value < this.minRating:\n          input.value = this.minRating.toString();\n          break;\n        case value > this.max:\n          input.value = this.max.toString();\n          break;\n      }\n      this.rating = Number(input.value);\n      emitEvent(this, 'scaleChange', { value: this.rating });\n    };\n    this.handleStarClick = (ev) => {\n      const star = ev.composedPath()[0];\n      const starValue = Number(star.dataset.value);\n      // set focus on input to make arrow keys work to select stars\n      const input = this.host.shadowRoot.querySelector('input');\n      input.focus();\n      if (starValue === 1 && this.rating === 1 && this.minRating === 0) {\n        this.rating = this.minRating;\n      }\n      else {\n        this.rating = starValue;\n      }\n      emitEvent(this, 'scaleChange', { value: this.rating });\n    };\n  }\n  componentWillRender() {\n    // make sure the deprecated props overwrite the actual ones if used\n    // and show status note deprecated\n    if (this.maxRating !== 5) {\n      this.max = this.maxRating;\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"maxRating\" is deprecated. Please use the \"max\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.minRating !== 0) {\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"minRating\" is deprecated and will be deleted upon the next release',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    if (this.starSize !== 'large') {\n      this.size = this.starSize;\n      statusNote({\n        tag: 'deprecated',\n        message: 'Property \"starSize\" is deprecated. Please use the \"size\" property!',\n        type: 'warn',\n        source: this.host,\n      });\n    }\n    // deactivate showing half stars while keeping the code\n    this.rating = Math.round(this.rating);\n  }\n  // constructs the aria message for the current rating\n  getRatingText() {\n    const filledText = this.ariaLabelTranslation\n      .replace(/\\$rating/g, `${this.rating}`)\n      // TODO: remove when `maxRating` is also being removed\n      .replace(/\\$maxRating/g, `${this.max}`)\n      .replace(/\\$max/g, `${this.max}`);\n    return filledText;\n  }\n  renderStar(index, selected = false, rating) {\n    const size = sizes[this.size];\n    const isWholeNumber = rating % 1 === 0;\n    const isLastNumber = Math.ceil(rating) === index;\n    return (h(\"div\", { part: \"star\", \"data-value\": index, \"data-selected\": selected, \"data-half\": isLastNumber && !isWholeNumber, onMouseUp: !this.readonly && this.handleStarClick,\n      // sets up first star to be the resetter above the input element\n      style: { zIndex: index === 1 ? '5' : 'auto' } }, h(\"scale-icon-action-favorite\", { size: size, part: \"placeholder-star\" }), h(\"div\", { class: \"icon-clip\" }, h(\"scale-icon-action-favorite\", { size: size, selected: true, part: \"selected-star\" }))));\n  }\n  renderRating() {\n    const stars = [];\n    const roundedRating = Math.ceil(this.rating);\n    const max = this.max;\n    for (let index = 1; index <= max; index++) {\n      const isSelected = roundedRating >= index;\n      stars.push(this.renderStar(index, isSelected, this.rating));\n    }\n    return stars;\n  }\n  render() {\n    return (h(Host, { class: {\n        hideLabel: this.hideLabel,\n        disabled: this.disabled,\n        readonly: this.readonly,\n      } }, h(\"div\", { part: \"container\" }, h(\"label\", { id: `${this.ratingStarId}-label`, part: \"label\", htmlFor: this.ratingStarId }, this.label), h(\"div\", { part: \"content\" }, h(\"div\", { part: \"wrapper\", \"aria-valuetext\": this.getRatingText(), \"aria-orientation\": \"horizontal\", \"aria-describedby\": this.infoText ? `${this.ratingStarId}-infotext` : false }, h(\"input\", { disabled: this.disabled, readonly: this.readonly, part: \"range-slider\", type: this.readonly ? 'number' : 'range', id: this.ratingStarId, min: 0, max: this.max + 1, value: this.rating, step: \"1\", \"aria-labelledby\": `${this.ratingStarId}-label`, \"aria-readonly\": this.readonly ? 'true' : false, \"aria-valuemin\": this.minRating, \"aria-valuemax\": this.max, \"aria-valuenow\": this.rating, \"aria-valuetext\": this.getRatingText(), onInput: !this.readonly && this.handleInput }), this.renderRating()), this.infoText && (h(\"div\", { part: \"infotext\", id: `${this.ratingStarId}-infotext` }, this.infoText))))));\n  }\n  get host() { return getElement(this); }\n};\nRatingStars.style = ratingStarsCss;\n\nexport { RatingStars as scale_rating_stars };\n"],
  "mappings": "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",
  "names": []
}
